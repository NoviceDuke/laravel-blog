{"version":3,"sources":["a_delete_method.js","sweetalert2.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"hchs_backend.js","sourcesContent":["// 註冊設定 a button能夠賦予DELETE method\r\n// <a href=\"posts/2\" data-method=\"delete\" data-confirm=\"Are you sure?\" data-token=\"{{csrf_token()}}\">\r\n  var laravel = {\r\n     initialize: function() {\r\n       this.methodLinks = $('a[data-method]');\r\n       this.token = $('a[data-token]');\r\n       this.registerEvents();\r\n     },\r\n\r\n     registerEvents: function() {\r\n       this.methodLinks.on('click', this.handleMethod);\r\n     },\r\n\r\n     handleMethod: function(e) {\r\n       var link = $(this);\r\n       var httpMethod = link.data('method').toUpperCase();\r\n       var form;\r\n\r\n       // If the data-method attribute is not PUT or DELETE,\r\n       // then we don't know what to do. Just ignore.\r\n       if ( $.inArray(httpMethod, ['PUT', 'DELETE']) === - 1 ) {\r\n         return;\r\n       }\r\n\r\n       // Allow user to optionally provide data-confirm=\"Are you sure?\"\r\n       if ( link.data('confirm') ) {\r\n         if ( ! laravel.verifyConfirm(link) ) {\r\n           return false;\r\n         }\r\n       }\r\n\r\n       form = laravel.createForm(link);\r\n       form.submit();\r\n\r\n       e.preventDefault();\r\n     },\r\n\r\n     verifyConfirm: function(link) {\r\n       return confirm(link.data('confirm'));\r\n     },\r\n\r\n     createForm: function(link) {\r\n       var form =\r\n       $('<form>', {\r\n         'method': 'POST',\r\n         'action': link.attr('href')\r\n       });\r\n\r\n       var token =\r\n       $('<input>', {\r\n         'type': 'hidden',\r\n         'name': '_token',\r\n         'value': link.data('token')\r\n         });\r\n\r\n       var hiddenInput =\r\n       $('<input>', {\r\n         'name': '_method',\r\n         'type': 'hidden',\r\n         'value': link.data('method')\r\n       });\r\n\r\n       return form.append(token, hiddenInput)\r\n                  .appendTo('body');\r\n     }\r\n   };\r\n\r\n   laravel.initialize();\r\n","/*!\r\n * sweetalert2 v4.2.4\r\n * Released under the MIT License.\r\n */\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n  typeof define === 'function' && define.amd ? define(factory) :\r\n  (global.Sweetalert2 = factory());\r\n}(this, function () { 'use strict';\r\n\r\n  var swalPrefix = 'swal2-';\r\n\r\n  var prefix = function(items) {\r\n    var result = {};\r\n    for (var i in items) {\r\n      result[items[i]] = swalPrefix + items[i];\r\n    }\r\n    return result;\r\n  };\r\n\r\n  var swalClasses = prefix([\r\n    'container',\r\n    'modal',\r\n    'overlay',\r\n    'close',\r\n    'content',\r\n    'spacer',\r\n    'confirm',\r\n    'cancel',\r\n    'icon',\r\n    'image',\r\n    'input',\r\n    'select',\r\n    'radio',\r\n    'checkbox',\r\n    'textarea',\r\n    'validationerror'\r\n  ]);\r\n\r\n  var iconTypes = prefix([\r\n    'success',\r\n    'warning',\r\n    'info',\r\n    'question',\r\n    'error'\r\n  ]);\r\n\r\n  var defaultParams = {\r\n    title: '',\r\n    text: '',\r\n    html: '',\r\n    type: null,\r\n    customClass: '',\r\n    animation: true,\r\n    allowOutsideClick: true,\r\n    allowEscapeKey: true,\r\n    showConfirmButton: true,\r\n    showCancelButton: false,\r\n    preConfirm: null,\r\n    confirmButtonText: 'OK',\r\n    confirmButtonColor: '#3085d6',\r\n    confirmButtonClass: null,\r\n    cancelButtonText: 'Cancel',\r\n    cancelButtonColor: '#aaa',\r\n    cancelButtonClass: null,\r\n    buttonsStyling: true,\r\n    reverseButtons: false,\r\n    focusCancel: false,\r\n    showCloseButton: false,\r\n    showLoaderOnConfirm: false,\r\n    imageUrl: null,\r\n    imageWidth: null,\r\n    imageHeight: null,\r\n    imageClass: null,\r\n    timer: null,\r\n    width: 500,\r\n    padding: 20,\r\n    background: '#fff',\r\n    input: null, // 'text' | 'email' | 'password' | 'select' | 'radio' | 'checkbox' | 'textarea' | 'file'\r\n    inputPlaceholder: '',\r\n    inputValue: '',\r\n    inputOptions: {},\r\n    inputAutoTrim: true,\r\n    inputClass: null,\r\n    inputAttributes: {},\r\n    inputValidator: null,\r\n    onOpen: null,\r\n    onClose: null\r\n  };\r\n\r\n  var sweetHTML = '<div class=\"' + swalClasses.overlay + '\" tabIndex=\"-1\"></div>' +\r\n    '<div class=\"' + swalClasses.modal + '\" style=\"display: none\" tabIndex=\"-1\">' +\r\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.error + '\">' +\r\n        '<span class=\"x-mark\"><span class=\"line left\"></span><span class=\"line right\"></span></span>' +\r\n      '</div>' +\r\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.question + '\">?</div>' +\r\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.warning + '\">!</div>' +\r\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.info + '\">i</div>' +\r\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.success + '\">' +\r\n        '<span class=\"line tip\"></span> <span class=\"line long\"></span>' +\r\n        '<div class=\"placeholder\"></div> <div class=\"fix\"></div>' +\r\n      '</div>' +\r\n      '<img class=\"' + swalClasses.image + '\">' +\r\n      '<h2></h2>' +\r\n      '<div class=\"' + swalClasses.content + '\"></div>' +\r\n      '<input class=\"' + swalClasses.input + '\">' +\r\n      '<select class=\"' + swalClasses.select + '\"></select>' +\r\n      '<div class=\"' + swalClasses.radio + '\"></div>' +\r\n      '<label for=\"' + swalClasses.checkbox + '\" class=\"' + swalClasses.checkbox + '\">' +\r\n        '<input type=\"checkbox\" id=\"' + swalClasses.checkbox + '\">' +\r\n      '</label>' +\r\n      '<textarea class=\"' + swalClasses.textarea + '\"></textarea>' +\r\n      '<div class=\"' + swalClasses.validationerror + '\"></div>' +\r\n      '<hr class=\"' + swalClasses.spacer + '\">' +\r\n      '<button class=\"' + swalClasses.confirm + '\">OK</button>' +\r\n      '<button class=\"' + swalClasses.cancel + '\">Cancel</button>' +\r\n      '<span class=\"' + swalClasses.close + '\">&times;</span>' +\r\n    '</div>';\r\n\r\n  var extend = function(a, b) {\r\n    for (var key in b) {\r\n      if (b.hasOwnProperty(key)) {\r\n        a[key] = b[key];\r\n      }\r\n    }\r\n\r\n    return a;\r\n  };\r\n\r\n\r\n  /*\r\n   * Set hover, active and focus-states for buttons (source: http://www.sitepoint.com/javascript-generate-lighter-darker-color)\r\n   */\r\n  var colorLuminance = function(hex, lum) {\r\n    // Validate hex string\r\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n    if (hex.length < 6) {\r\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    lum = lum || 0;\r\n\r\n    // Convert to decimal and change luminosity\r\n    var rgb = '#';\r\n    for (var i = 0; i < 3; i++) {\r\n      var c = parseInt(hex.substr(i * 2, 2), 16);\r\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n      rgb += ('00' + c).substr(c.length);\r\n    }\r\n\r\n    return rgb;\r\n  };\r\n\r\n  /*\r\n   * check if variable is function type. http://stackoverflow.com/questions/5999998/how-can-i-check-if-a-javascript-variable-is-function-type\r\n   */\r\n  var isFunction = function(functionToCheck) {\r\n    return typeof functionToCheck === 'function';\r\n  };\r\n\r\n  // Remember state in cases where opening and handling a modal will fiddle with it.\r\n  var states = {\r\n    previousWindowKeyDown: null,\r\n    previousActiveElement: null\r\n  };\r\n\r\n  /*\r\n   * Manipulate DOM\r\n   */\r\n  var elementByClass = function(className) {\r\n    return document.querySelector('.' + className);\r\n  };\r\n\r\n  var getModal = function() {\r\n    return elementByClass(swalClasses.modal);\r\n  };\r\n\r\n  var getOverlay = function() {\r\n    return elementByClass(swalClasses.overlay);\r\n  };\r\n\r\n  var getConfirmButton = function() {\r\n    return elementByClass(swalClasses.confirm);\r\n  };\r\n\r\n  var getCancelButton = function() {\r\n    return elementByClass(swalClasses.cancel);\r\n  };\r\n\r\n  var getCloseButton = function() {\r\n    return elementByClass(swalClasses.close);\r\n  };\r\n\r\n  var getFocusableElements = function(focusCancel) {\r\n    var buttons = [getConfirmButton(), getCancelButton()];\r\n    if (focusCancel) {\r\n      buttons.reverse();\r\n    }\r\n    return buttons.concat(Array.prototype.slice.call(\r\n      getModal().querySelectorAll('button:not([class^=' + swalPrefix + ']), input:not([type=hidden]), textarea, select')\r\n    ));\r\n  };\r\n\r\n  var hasClass = function(elem, className) {\r\n    return elem.classList.contains(className);\r\n  };\r\n\r\n  var focusInput = function(input) {\r\n    input.focus();\r\n\r\n    // http://stackoverflow.com/a/2345915/1331425\r\n    var val = input.value;\r\n    input.value = '';\r\n    input.value = val;\r\n  };\r\n\r\n  var addClass = function(elem, className) {\r\n    if (!elem || !className) {\r\n      return;\r\n    }\r\n    var classes = className.split(/\\s+/);\r\n    classes.forEach(function(className) {\r\n      elem.classList.add(className);\r\n    });\r\n  };\r\n\r\n  var removeClass = function(elem, className) {\r\n    if (!elem || !className) {\r\n      return;\r\n    }\r\n    var classes = className.split(/\\s+/);\r\n    classes.forEach(function(className) {\r\n      elem.classList.remove(className);\r\n    });\r\n  };\r\n\r\n  var getChildByClass = function(elem, className) {\r\n    for (var i = 0; i < elem.childNodes.length; i++) {\r\n      if (hasClass(elem.childNodes[i], className)) {\r\n        return elem.childNodes[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  var _show = function(elem) {\r\n    elem.style.opacity = '';\r\n    elem.style.display = 'block';\r\n  };\r\n\r\n  var show = function(elems) {\r\n    if (elems && !elems.length) {\r\n      return _show(elems);\r\n    }\r\n    for (var i = 0; i < elems.length; ++i) {\r\n      _show(elems[i]);\r\n    }\r\n  };\r\n\r\n  var _hide = function(elem) {\r\n    elem.style.opacity = '';\r\n    elem.style.display = 'none';\r\n  };\r\n\r\n  var hide = function(elems) {\r\n    if (elems && !elems.length) {\r\n      return _hide(elems);\r\n    }\r\n    for (var i = 0; i < elems.length; ++i) {\r\n      _hide(elems[i]);\r\n    }\r\n  };\r\n\r\n  // borrowed from jqeury $(elem).is(':visible') implementation\r\n  var isVisible = function(elem) {\r\n    return elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length;\r\n  };\r\n\r\n  var removeStyleProperty = function(elem, property) {\r\n    if (elem.style.removeProperty) {\r\n      elem.style.removeProperty(property);\r\n    } else {\r\n      elem.style.removeAttribute(property);\r\n    }\r\n  };\r\n\r\n  var getTopMargin = function(elem) {\r\n    var elemDisplay = elem.style.display;\r\n    elem.style.left = '-9999px';\r\n    elem.style.display = 'block';\r\n\r\n    var height = elem.clientHeight;\r\n\r\n    elem.style.left = '';\r\n    elem.style.display = elemDisplay;\r\n    return ('-' + parseInt(height / 2, 10) + 'px');\r\n  };\r\n\r\n  var fadeIn = function(elem, interval) {\r\n    if (+elem.style.opacity < 1) {\r\n      interval = interval || 16;\r\n      elem.style.opacity = 0;\r\n      elem.style.display = 'block';\r\n      var last = +new Date();\r\n      var tick = function() {\r\n        var newOpacity = +elem.style.opacity + (new Date() - last) / 100;\r\n        elem.style.opacity = (newOpacity > 1) ? 1 : newOpacity;\r\n        last = +new Date();\r\n\r\n        if (+elem.style.opacity < 1) {\r\n          setTimeout(tick, interval);\r\n        }\r\n      };\r\n      tick();\r\n    }\r\n  };\r\n\r\n  var fadeOut = function(elem, interval) {\r\n    if (+elem.style.opacity > 0) {\r\n      interval = interval || 16;\r\n      var opacity = elem.style.opacity;\r\n      var last = +new Date();\r\n      var tick = function() {\r\n        var change = new Date() - last;\r\n        var newOpacity = +elem.style.opacity - change / (opacity * 100);\r\n        elem.style.opacity = newOpacity;\r\n        last = +new Date();\r\n\r\n        if (+elem.style.opacity > 0) {\r\n          setTimeout(tick, interval);\r\n        } else {\r\n          _hide(elem);\r\n        }\r\n      };\r\n      tick();\r\n    }\r\n  };\r\n\r\n  var fireClick = function(node) {\r\n    // Taken from http://www.nonobtrusive.com/2011/11/29/programatically-fire-crossbrowser-click-event-with-javascript/\r\n    // Then fixed for today's Chrome browser.\r\n    if (typeof MouseEvent === 'function') {\r\n      // Up-to-date approach\r\n      var mevt = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: false,\r\n        cancelable: true\r\n      });\r\n      node.dispatchEvent(mevt);\r\n    } else if (document.createEvent) {\r\n      // Fallback\r\n      var evt = document.createEvent('MouseEvents');\r\n      evt.initEvent('click', false, false);\r\n      node.dispatchEvent(evt);\r\n    } else if (document.createEventObject) {\r\n      node.fireEvent('onclick');\r\n    } else if (typeof node.onclick === 'function') {\r\n      node.onclick();\r\n    }\r\n  };\r\n\r\n  var stopEventPropagation = function(e) {\r\n    // In particular, make sure the space bar doesn't scroll the main window.\r\n    if (typeof e.stopPropagation === 'function') {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    } else if (window.event && window.event.hasOwnProperty('cancelBubble')) {\r\n      window.event.cancelBubble = true;\r\n    }\r\n  };\r\n\r\n  var animationEndEvent = (function() {\r\n    var testEl = document.createElement('div'),\r\n      transEndEventNames = {\r\n        'WebkitAnimation': 'webkitAnimationEnd',\r\n        'OAnimation': 'oAnimationEnd oanimationend',\r\n        'msAnimation': 'MSAnimationEnd',\r\n        'animation': 'animationend'\r\n      };\r\n    for (var i in transEndEventNames) {\r\n      if (transEndEventNames.hasOwnProperty(i) &&\r\n        testEl.style[i] !== undefined) {\r\n        return transEndEventNames[i];\r\n      }\r\n    }\r\n\r\n    return false;\r\n  })();\r\n\r\n\r\n  // Reset the page to its previous state\r\n  var resetPrevState = function() {\r\n    var modal = getModal();\r\n    window.onkeydown = states.previousWindowKeyDown;\r\n    if (states.previousActiveElement && states.previousActiveElement.focus) {\r\n      states.previousActiveElement.focus();\r\n    }\r\n    clearTimeout(modal.timeout);\r\n  };\r\n\r\n  // Remove dynamically created media query\r\n  var addMediaQuery = function(content) {\r\n    var mediaqueryId = swalPrefix + 'mediaquery-' + Math.random().toString(36).substring(2, 7);\r\n    var head = document.getElementsByTagName('head')[0];\r\n    var cssNode = document.createElement('style');\r\n    cssNode.type = 'text/css';\r\n    cssNode.id = mediaqueryId;\r\n    cssNode.innerHTML = content;\r\n    head.appendChild(cssNode);\r\n    return mediaqueryId;\r\n  };\r\n\r\n  // Remove dynamically created media query\r\n  var removeMediaQuery = function(mediaqueryId) {\r\n    if (!mediaqueryId) {\r\n      return false;\r\n    }\r\n    var head = document.getElementsByTagName('head')[0];\r\n    var mediaquery = document.getElementById(mediaqueryId);\r\n    if (mediaquery) {\r\n      head.removeChild(mediaquery);\r\n    }\r\n  };\r\n\r\n  var modalParams = extend({}, defaultParams);\r\n\r\n  /*\r\n   * Set type, text and actions on modal\r\n   */\r\n  var setParameters = function(params) {\r\n    var modal = getModal();\r\n\r\n    for (var param in params) {\r\n      if (!defaultParams.hasOwnProperty(param) && param !== 'extraParams') {\r\n        console.warn('SweetAlert2: Unknown parameter \"' + param + '\"');\r\n      }\r\n    }\r\n\r\n    // set modal width and margin-left\r\n    params.width = params.width.toString();\r\n    var width = params.width.match(/^(\\d+)(px|%)?$/);\r\n    var widthUnits;\r\n    if (!width) {\r\n      console.warn('SweetAlert2: Invalid width parameter, usage examples: \"400px\", \"50%\", or just 500 which equals to \"500px\"');\r\n    } else {\r\n      widthUnits = 'px';\r\n      if (width[2]) {\r\n        widthUnits = width[2];\r\n      }\r\n      width = parseInt(width[1], 10);\r\n      modal.style.width = width + widthUnits;\r\n      modal.style.marginLeft = -width / 2 + widthUnits;\r\n    }\r\n\r\n    modal.style.padding = params.padding + 'px';\r\n    modal.style.background = params.background;\r\n\r\n    if (widthUnits === 'px') {\r\n      // add dynamic media query css\r\n      var margin = 5; // %\r\n      var mediaQueryMaxWidth = width + (width * (margin/100) * 2);\r\n      var mediaqueryId = addMediaQuery(\r\n        '@media screen and (max-width: ' + mediaQueryMaxWidth + 'px) {' +\r\n          '.' + swalClasses.modal + ' {' +\r\n            'width: auto !important;' +\r\n            'left: ' + margin + '% !important;' +\r\n            'right: ' + margin + '% !important;' +\r\n            'margin-left: 0 !important;' +\r\n          '}' +\r\n        '}'\r\n      );\r\n      modal.setAttribute('data-mediaquery-id', mediaqueryId);\r\n    }\r\n\r\n    var $title = modal.querySelector('h2');\r\n    var $content = modal.querySelector('.' + swalClasses.content);\r\n    var $confirmBtn = getConfirmButton();\r\n    var $cancelBtn = getCancelButton();\r\n    var $spacer = modal.querySelector('.' + swalClasses.spacer);\r\n    var $closeButton = modal.querySelector('.' + swalClasses.close);\r\n\r\n    // Title\r\n    $title.innerHTML = params.title.split('\\n').join('<br>');\r\n\r\n    // Content\r\n    if (params.text || params.html) {\r\n      if (typeof params.html === 'object') {\r\n        $content.innerHTML = '';\r\n        if (0 in params.html) {\r\n          for (var i = 0; i in params.html; i++) {\r\n            $content.appendChild(params.html[i]);\r\n          }\r\n        } else {\r\n          $content.appendChild(params.html);\r\n        }\r\n      } else {\r\n        $content.innerHTML = params.html || (params.text.split('\\n').join('<br>'));\r\n      }\r\n      show($content);\r\n    } else {\r\n      hide($content);\r\n    }\r\n\r\n    // Close button\r\n    if (params.showCloseButton) {\r\n      show($closeButton);\r\n    } else {\r\n      hide($closeButton);\r\n    }\r\n\r\n    // Custom Class\r\n    modal.className = swalClasses.modal;\r\n    if (params.customClass) {\r\n      addClass(modal, params.customClass);\r\n    }\r\n\r\n    // Icon\r\n    hide(modal.querySelectorAll('.' + swalClasses.icon));\r\n    if (params.type) {\r\n      var validType = false;\r\n      for (var iconType in iconTypes) {\r\n        if (params.type === iconType) {\r\n          validType = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!validType) {\r\n        console.error('SweetAlert2: Unknown alert type: ' + params.type);\r\n        return false;\r\n      }\r\n      var $icon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes[params.type]);\r\n      show($icon);\r\n\r\n      // Animate icon\r\n      switch (params.type) {\r\n        case 'success':\r\n          addClass($icon, 'animate');\r\n          addClass($icon.querySelector('.tip'), 'animate-success-tip');\r\n          addClass($icon.querySelector('.long'), 'animate-success-long');\r\n          break;\r\n        case 'error':\r\n          addClass($icon, 'animate-error-icon');\r\n          addClass($icon.querySelector('.x-mark'), 'animate-x-mark');\r\n          break;\r\n        case 'warning':\r\n          addClass($icon, 'pulse-warning');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n    // Custom image\r\n    var $customImage = modal.querySelector('.' + swalClasses.image);\r\n    if (params.imageUrl) {\r\n      $customImage.setAttribute('src', params.imageUrl);\r\n      show($customImage);\r\n\r\n      if (params.imageWidth) {\r\n        $customImage.setAttribute('width', params.imageWidth);\r\n      } else {\r\n        $customImage.removeAttribute('width');\r\n      }\r\n\r\n      if (params.imageHeight) {\r\n        $customImage.setAttribute('height', params.imageHeight);\r\n      } else {\r\n        $customImage.removeAttribute('height');\r\n      }\r\n\r\n      $customImage.className = swalClasses.image;\r\n      if (params.imageClass) {\r\n        addClass($customImage, params.imageClass);\r\n      }\r\n    } else {\r\n      hide($customImage);\r\n    }\r\n\r\n    // Cancel button\r\n    if (params.showCancelButton) {\r\n      $cancelBtn.style.display = 'inline-block';\r\n    } else {\r\n      hide($cancelBtn);\r\n    }\r\n\r\n    // Confirm button\r\n    if (params.showConfirmButton) {\r\n      removeStyleProperty($confirmBtn, 'display');\r\n    } else {\r\n      hide($confirmBtn);\r\n    }\r\n\r\n    // Buttons spacer\r\n    if (!params.showConfirmButton && !params.showCancelButton) {\r\n      hide($spacer);\r\n    } else {\r\n      show($spacer);\r\n    }\r\n\r\n    // Edit text on cancel and confirm buttons\r\n    $confirmBtn.innerHTML = params.confirmButtonText;\r\n    $cancelBtn.innerHTML = params.cancelButtonText;\r\n\r\n    // Set buttons to selected background colors\r\n    if (params.buttonsStyling) {\r\n      $confirmBtn.style.backgroundColor = params.confirmButtonColor;\r\n      $cancelBtn.style.backgroundColor = params.cancelButtonColor;\r\n    }\r\n\r\n    // Add buttons custom classes\r\n    $confirmBtn.className = swalClasses.confirm;\r\n    addClass($confirmBtn, params.confirmButtonClass);\r\n    $cancelBtn.className = swalClasses.cancel;\r\n    addClass($cancelBtn, params.cancelButtonClass);\r\n\r\n    // Buttons styling\r\n    if (params.buttonsStyling) {\r\n      addClass($confirmBtn, 'styled');\r\n      addClass($cancelBtn, 'styled');\r\n    } else {\r\n      removeClass($confirmBtn, 'styled');\r\n      removeClass($cancelBtn, 'styled');\r\n\r\n      $confirmBtn.style.backgroundColor = $confirmBtn.style.borderLeftColor = $confirmBtn.style.borderRightColor = '';\r\n      $cancelBtn.style.backgroundColor = $cancelBtn.style.borderLeftColor = $cancelBtn.style.borderRightColor = '';\r\n    }\r\n\r\n    // CSS animation\r\n    if (params.animation === true) {\r\n      removeClass(modal, 'no-animation');\r\n    } else {\r\n      addClass(modal, 'no-animation');\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Animations\r\n   */\r\n  var openModal = function(animation, onComplete) {\r\n    var modal = getModal();\r\n    if (animation) {\r\n      fadeIn(getOverlay(), 10);\r\n      addClass(modal, 'show-swal2');\r\n      removeClass(modal, 'hide-swal2');\r\n    } else {\r\n      show(getOverlay());\r\n    }\r\n    show(modal);\r\n    states.previousActiveElement = document.activeElement;\r\n    if (onComplete !== null && typeof onComplete === 'function') {\r\n      onComplete.call(this, modal);\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Set 'margin-top'-property on modal based on its computed height\r\n   */\r\n  var fixVerticalPosition = function() {\r\n    var modal = getModal();\r\n\r\n    if (modal !== null) {\r\n      modal.style.marginTop = getTopMargin(modal);\r\n    }\r\n  };\r\n\r\n  function modalDependant() {\r\n\r\n    if (arguments[0] === undefined) {\r\n      console.error('SweetAlert2 expects at least 1 attribute!');\r\n      return false;\r\n    }\r\n\r\n    var params = extend({}, modalParams);\r\n\r\n    switch (typeof arguments[0]) {\r\n\r\n      case 'string':\r\n        params.title = arguments[0];\r\n        params.text  = arguments[1] || '';\r\n        params.type  = arguments[2] || '';\r\n\r\n        break;\r\n\r\n      case 'object':\r\n        extend(params, arguments[0]);\r\n        params.extraParams = arguments[0].extraParams;\r\n\r\n        if (params.input === 'email' && params.inputValidator === null) {\r\n          params.inputValidator = function(email) {\r\n            return new Promise(function(resolve, reject) {\r\n              var emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n              if (emailRegex.test(email)) {\r\n                resolve();\r\n              } else {\r\n                reject('Invalid email address');\r\n              }\r\n            });\r\n          };\r\n        }\r\n\r\n        break;\r\n\r\n      default:\r\n        console.error('SweetAlert2: Unexpected type of argument! Expected \"string\" or \"object\", got ' + typeof arguments[0]);\r\n        return false;\r\n    }\r\n\r\n    setParameters(params);\r\n\r\n    // Modal interactions\r\n    var modal = getModal();\r\n\r\n    return new Promise(function(resolve, reject) {\r\n      // Close on timer\r\n      if (params.timer) {\r\n        modal.timeout = setTimeout(function() {\r\n          sweetAlert.closeModal(params.onClose);\r\n          reject('timer');\r\n        }, params.timer);\r\n      }\r\n\r\n      var getInput = function() {\r\n        switch (params.input) {\r\n          case 'select':\r\n            return getChildByClass(modal, swalClasses.select);\r\n          case 'radio':\r\n            return modal.querySelector('.' + swalClasses.radio + ' input:checked') ||\r\n              modal.querySelector('.' + swalClasses.radio + ' input:first-child');\r\n          case 'checkbox':\r\n            return modal.querySelector('#' + swalClasses.checkbox);\r\n          case 'textarea':\r\n            return getChildByClass(modal, swalClasses.textarea);\r\n          default:\r\n            return getChildByClass(modal, swalClasses.input);\r\n        }\r\n      };\r\n      var getInputValue = function() {\r\n        var input = getInput();\r\n        switch (params.input) {\r\n          case 'checkbox':\r\n            return input.checked ? 1 : 0;\r\n          case 'radio':\r\n            return input.checked ? input.value : null;\r\n          case 'file':\r\n            return input.files.length ? input.files[0] : null;\r\n          default:\r\n            return params.inputAutoTrim? input.value.trim() : input.value;\r\n        }\r\n      };\r\n\r\n      if (params.input) {\r\n        setTimeout(function() {\r\n          var input = getInput();\r\n          if (input) {\r\n            focusInput(input);\r\n          }\r\n        }, 0);\r\n      }\r\n\r\n      var confirm = function(value) {\r\n        if (params.showLoaderOnConfirm) {\r\n          sweetAlert.showLoading();\r\n        }\r\n\r\n        if (params.preConfirm) {\r\n          params.preConfirm(value, params.extraParams).then(\r\n            function(preConfirmValue) {\r\n              sweetAlert.closeModal(params.onClose);\r\n              resolve(preConfirmValue || value);\r\n            },\r\n            function(error) {\r\n              sweetAlert.hideLoading();\r\n              if (error) {\r\n                sweetAlert.showValidationError(error);\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          sweetAlert.closeModal(params.onClose);\r\n          resolve(value);\r\n        }\r\n      };\r\n\r\n      // Mouse interactions\r\n      var onButtonEvent = function(event) {\r\n        var e = event || window.event;\r\n        var target = e.target || e.srcElement;\r\n        var confirmBtn = getConfirmButton();\r\n        var cancelBtn = getCancelButton();\r\n        var targetedConfirm = confirmBtn === target || confirmBtn.contains(target);\r\n        var targetedCancel = cancelBtn === target || cancelBtn.contains(target);\r\n\r\n        switch (e.type) {\r\n          case 'mouseover':\r\n          case 'mouseup':\r\n            if (params.buttonsStyling) {\r\n              if (targetedConfirm) {\r\n                confirmBtn.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.1);\r\n              } else if (targetedCancel) {\r\n                cancelBtn.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.1);\r\n              }\r\n            }\r\n            break;\r\n          case 'mouseout':\r\n            if (params.buttonsStyling) {\r\n              if (targetedConfirm) {\r\n                confirmBtn.style.backgroundColor = params.confirmButtonColor;\r\n              } else if (targetedCancel) {\r\n                cancelBtn.style.backgroundColor = params.cancelButtonColor;\r\n              }\r\n            }\r\n            break;\r\n          case 'mousedown':\r\n            if (params.buttonsStyling) {\r\n              if (targetedConfirm) {\r\n                confirmBtn.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.2);\r\n              } else if (targetedCancel) {\r\n                cancelBtn.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.2);\r\n              }\r\n            }\r\n            break;\r\n          case 'click':\r\n            // Clicked 'confirm'\r\n            if (targetedConfirm && sweetAlert.isVisible()) {\r\n              if (params.input) {\r\n                var inputValue = getInputValue();\r\n\r\n                if (params.inputValidator) {\r\n                  sweetAlert.disableInput();\r\n                  params.inputValidator(inputValue, params.extraParams).then(\r\n                    function() {\r\n                      sweetAlert.enableInput();\r\n                      confirm(inputValue);\r\n                    },\r\n                    function(error) {\r\n                      sweetAlert.enableInput();\r\n                      if (error) {\r\n                        sweetAlert.showValidationError(error);\r\n                      }\r\n                    }\r\n                  );\r\n                } else {\r\n                  confirm(inputValue);\r\n                }\r\n\r\n              } else {\r\n                confirm(true);\r\n              }\r\n\r\n            // Clicked 'cancel'\r\n            } else if (targetedCancel && sweetAlert.isVisible()) {\r\n              sweetAlert.closeModal(params.onClose);\r\n              reject('cancel');\r\n            }\r\n\r\n            break;\r\n          default:\r\n        }\r\n      };\r\n\r\n      var $buttons = modal.querySelectorAll('button');\r\n      var i;\r\n      for (i = 0; i < $buttons.length; i++) {\r\n        $buttons[i].onclick     = onButtonEvent;\r\n        $buttons[i].onmouseover = onButtonEvent;\r\n        $buttons[i].onmouseout  = onButtonEvent;\r\n        $buttons[i].onmousedown = onButtonEvent;\r\n      }\r\n\r\n      // Closing modal by close button\r\n      getCloseButton().onclick = function() {\r\n        sweetAlert.closeModal(params.onClose);\r\n        reject('close');\r\n      };\r\n\r\n      // Closing modal by overlay click\r\n      getOverlay().onclick = function() {\r\n        if (params.allowOutsideClick) {\r\n          sweetAlert.closeModal(params.onClose);\r\n          reject('overlay');\r\n        }\r\n      };\r\n\r\n      var $confirmButton = getConfirmButton();\r\n      var $cancelButton = getCancelButton();\r\n\r\n      // Reverse buttons if neede d\r\n      if (params.reverseButtons) {\r\n        $confirmButton.parentNode.insertBefore($cancelButton, $confirmButton);\r\n      } else {\r\n        $confirmButton.parentNode.insertBefore($confirmButton, $cancelButton);\r\n      }\r\n\r\n      // Focus handling\r\n      function setFocus(index, increment) {\r\n        var focusableElements = getFocusableElements(params.focusCancel);\r\n        // search for visible elements and select the next possible match\r\n        for (var i = 0; i < focusableElements.length; i++) {\r\n          index = index + increment;\r\n\r\n          // rollover to first item\r\n          if (index === focusableElements.length) {\r\n            index = 0;\r\n\r\n          // go to last item\r\n          } else if (index === -1) {\r\n            index = focusableElements.length - 1;\r\n          }\r\n\r\n          // determine if element is visible\r\n          var el = focusableElements[index];\r\n          if (isVisible(el)) {\r\n            return el.focus();\r\n          }\r\n        }\r\n      }\r\n\r\n      function handleKeyDown(event) {\r\n        var e = event || window.event;\r\n        var keyCode = e.keyCode || e.which;\r\n\r\n        if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\r\n          // Don't do work on keys we don't care about.\r\n          return;\r\n        }\r\n\r\n        var $targetElement = e.target || e.srcElement;\r\n\r\n        var focusableElements = getFocusableElements(params.focusCancel);\r\n        var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\r\n        for (var i = 0; i < focusableElements.length; i++) {\r\n          if ($targetElement === focusableElements[i]) {\r\n            btnIndex = i;\r\n            break;\r\n          }\r\n        }\r\n\r\n        // TAB\r\n        if (keyCode === 9) {\r\n          if (!e.shiftKey) {\r\n            // Cycle to the next button\r\n            setFocus(btnIndex, 1);\r\n          } else {\r\n            // Cycle to the prev button\r\n            setFocus(btnIndex, -1);\r\n          }\r\n\r\n          stopEventPropagation(e);\r\n\r\n        } else {\r\n          if (keyCode === 13 || keyCode === 32) {\r\n            if (btnIndex === -1) {\r\n              // ENTER/SPACE clicked outside of a button.\r\n              if (params.focusCancel) {\r\n                fireClick($cancelButton, e);\r\n              } else {\r\n                fireClick($confirmButton, e);\r\n              }\r\n            }\r\n          } else if (keyCode === 27 && params.allowEscapeKey === true) {\r\n            sweetAlert.closeModal(params.onClose);\r\n            reject('esc');\r\n          }\r\n        }\r\n      }\r\n\r\n      states.previousWindowKeyDown = window.onkeydown;\r\n      window.onkeydown = handleKeyDown;\r\n\r\n      // Loading state\r\n      if (params.buttonsStyling) {\r\n        $confirmButton.style.borderLeftColor = params.confirmButtonColor;\r\n        $confirmButton.style.borderRightColor = params.confirmButtonColor;\r\n      }\r\n\r\n      /**\r\n       * Show spinner instead of Confirm button and disable Cancel button\r\n       */\r\n      sweetAlert.showLoading = sweetAlert.enableLoading = function() {\r\n        addClass($confirmButton, 'loading');\r\n        addClass(modal, 'loading');\r\n        $confirmButton.disabled = true;\r\n        $cancelButton.disabled = true;\r\n      };\r\n\r\n      /**\r\n       * Show spinner instead of Confirm button and disable Cancel button\r\n       */\r\n      sweetAlert.hideLoading = sweetAlert.disableLoading = function() {\r\n        removeClass($confirmButton, 'loading');\r\n        removeClass(modal, 'loading');\r\n        $confirmButton.disabled = false;\r\n        $cancelButton.disabled = false;\r\n      };\r\n\r\n      sweetAlert.enableButtons = function() {\r\n        $confirmButton.disabled = false;\r\n        $cancelButton.disabled = false;\r\n      };\r\n\r\n      sweetAlert.disableButtons = function() {\r\n        $confirmButton.disabled = true;\r\n        $cancelButton.disabled = true;\r\n      };\r\n\r\n      sweetAlert.enableConfirmButton = function() {\r\n        $confirmButton.disabled = false;\r\n      };\r\n\r\n      sweetAlert.disableConfirmButton = function() {\r\n        $confirmButton.disabled = true;\r\n      };\r\n\r\n      sweetAlert.enableInput = function() {\r\n        var input = getInput();\r\n        if (input.type === 'radio') {\r\n          var radiosContainer = input.parentNode.parentNode;\r\n          var radios = radiosContainer.querySelectorAll('input');\r\n          for (var i = 0; i < radios.length; i++) {\r\n            radios[i].disabled = false;\r\n          }\r\n        } else {\r\n          input.disabled = false;\r\n        }\r\n      };\r\n\r\n      sweetAlert.disableInput = function() {\r\n        var input = getInput();\r\n        if (input.type === 'radio') {\r\n          var radiosContainer = input.parentNode.parentNode;\r\n          var radios = radiosContainer.querySelectorAll('input');\r\n          for (var i = 0; i < radios.length; i++) {\r\n            radios[i].disabled = true;\r\n          }\r\n        } else {\r\n          input.disabled = true;\r\n        }\r\n      };\r\n\r\n      sweetAlert.showValidationError = function(error) {\r\n        var $validationError = modal.querySelector('.' + swalClasses.validationerror);\r\n        $validationError.innerHTML = error;\r\n        show($validationError);\r\n\r\n        var input = getInput();\r\n        focusInput(input);\r\n        addClass(input, 'error');\r\n      };\r\n\r\n      sweetAlert.resetValidationError = function() {\r\n        var $validationError = modal.querySelector('.' + swalClasses.validationerror);\r\n        hide($validationError);\r\n\r\n        var input = getInput();\r\n        if (input) {\r\n          removeClass(input, 'error');\r\n        }\r\n      };\r\n\r\n      sweetAlert.enableButtons();\r\n      sweetAlert.hideLoading();\r\n      sweetAlert.resetValidationError();\r\n\r\n      // input, select\r\n      var inputTypes = ['input', 'select', 'radio', 'checkbox', 'textarea'];\r\n      var input;\r\n      for (i = 0; i < inputTypes.length; i++) {\r\n        var inputClass = swalClasses[inputTypes[i]];\r\n        input = getChildByClass(modal, inputClass);\r\n\r\n        // set attributes\r\n        while (input.attributes.length > 0) {\r\n          input.removeAttribute(input.attributes[0].name);\r\n        }\r\n        for (var attr in params.inputAttributes) {\r\n          input.setAttribute(attr, params.inputAttributes[attr]);\r\n        }\r\n\r\n        // set class\r\n        input.className = inputClass;\r\n        if (params.inputClass) {\r\n          addClass(input, params.inputClass);\r\n        }\r\n\r\n        _hide(input);\r\n      }\r\n\r\n      var populateInputOptions;\r\n      switch (params.input) {\r\n        case 'text':\r\n        case 'email':\r\n        case 'password':\r\n        case 'file':\r\n          input = getChildByClass(modal, swalClasses.input);\r\n          input.value = params.inputValue;\r\n          input.placeholder = params.inputPlaceholder;\r\n          input.type = params.input;\r\n          _show(input);\r\n          break;\r\n        case 'select':\r\n          var select = getChildByClass(modal, swalClasses.select);\r\n          select.innerHTML = '';\r\n          if (params.inputPlaceholder) {\r\n            var placeholder = document.createElement('option');\r\n            placeholder.innerHTML = params.inputPlaceholder;\r\n            placeholder.value = '';\r\n            placeholder.disabled = true;\r\n            placeholder.selected = true;\r\n            select.appendChild(placeholder);\r\n          }\r\n          populateInputOptions = function(inputOptions) {\r\n            for (var optionValue in inputOptions) {\r\n              var option = document.createElement('option');\r\n              option.value = optionValue;\r\n              option.innerHTML = inputOptions[optionValue];\r\n              if (params.inputValue === optionValue) {\r\n                option.selected = true;\r\n              }\r\n              select.appendChild(option);\r\n            }\r\n            _show(select);\r\n            select.focus();\r\n          };\r\n          break;\r\n        case 'radio':\r\n          var radio = getChildByClass(modal, swalClasses.radio);\r\n          radio.innerHTML = '';\r\n          populateInputOptions = function(inputOptions) {\r\n            for (var radioValue in inputOptions) {\r\n              var id = 1;\r\n              var radioInput = document.createElement('input');\r\n              var radioLabel = document.createElement('label');\r\n              var radioLabelSpan = document.createElement('span');\r\n              radioInput.type = 'radio';\r\n              radioInput.name = swalClasses.radio;\r\n              radioInput.value = radioValue;\r\n              radioInput.id = swalClasses.radio + '-' + (id++);\r\n              if (params.inputValue === radioValue) {\r\n                radioInput.checked = true;\r\n              }\r\n              radioLabelSpan.innerHTML = inputOptions[radioValue];\r\n              radioLabel.appendChild(radioInput);\r\n              radioLabel.appendChild(radioLabelSpan);\r\n              radioLabel.for = radioInput.id;\r\n              radio.appendChild(radioLabel);\r\n            }\r\n            _show(radio);\r\n            var radios = radio.querySelectorAll('input');\r\n            if (radios.length) {\r\n              radios[0].focus();\r\n            }\r\n          };\r\n          break;\r\n        case 'checkbox':\r\n          var checkbox = getChildByClass(modal, swalClasses.checkbox);\r\n          var checkboxInput = modal.querySelector('#' + swalClasses.checkbox);\r\n          checkboxInput.value = 1;\r\n          checkboxInput.checked = Boolean(params.inputValue);\r\n          var label = checkbox.getElementsByTagName('span');\r\n          if (label.length) {\r\n            checkbox.removeChild(label[0]);\r\n          }\r\n          label = document.createElement('span');\r\n          label.innerHTML = params.inputPlaceholder;\r\n          checkbox.appendChild(label);\r\n          _show(checkbox);\r\n          break;\r\n        case 'textarea':\r\n          var textarea = getChildByClass(modal, swalClasses.textarea);\r\n          textarea.value = params.inputValue;\r\n          textarea.placeholder = params.inputPlaceholder;\r\n          _show(textarea);\r\n          break;\r\n        case null:\r\n          break;\r\n        default:\r\n          console.error('SweetAlert2: Unexpected type of input! Expected \"text\" or \"email\" or \"password\", \"select\", \"checkbox\", \"textarea\" or \"file\", got \"' + params.input + '\"');\r\n          break;\r\n      }\r\n\r\n      if (params.input === 'select' || params.input === 'radio') {\r\n        if (params.inputOptions instanceof Promise) {\r\n          sweetAlert.showLoading();\r\n          params.inputOptions.then(function(inputOptions) {\r\n            sweetAlert.hideLoading();\r\n            populateInputOptions(inputOptions);\r\n          });\r\n        } else if (typeof params.inputOptions === 'object') {\r\n          populateInputOptions(params.inputOptions);\r\n        } else {\r\n          console.error('SweetAlert2: Unexpected type of inputOptions! Expected object or Promise, got ' + typeof params.inputOptions);\r\n        }\r\n      }\r\n\r\n      fixVerticalPosition();\r\n      openModal(params.animation, params.onOpen);\r\n\r\n      // Focus the first element (input or button)\r\n      setFocus(-1, 1);\r\n    });\r\n  }\r\n\r\n  // SweetAlert function\r\n  function sweetAlert() {\r\n    // Copy arguments to the local args variable\r\n    var args = arguments;\r\n    var modal = getModal();\r\n\r\n    if (modal === null) {\r\n      sweetAlert.init();\r\n      modal = getModal();\r\n    }\r\n\r\n    if (sweetAlert.isVisible()) {\r\n      sweetAlert.close();\r\n    }\r\n\r\n    return modalDependant.apply(this, args);\r\n  }\r\n\r\n  /*\r\n   * Global function to determine if swal2 modal is visible\r\n   */\r\n  sweetAlert.isVisible = function() {\r\n    var modal = getModal();\r\n    return isVisible(modal);\r\n  };\r\n\r\n  /*\r\n   * Global function for chaining sweetAlert modals\r\n   */\r\n  sweetAlert.queue = function(steps, path) {\r\n    var stateObject;\r\n    if (path) {\r\n      stateObject = {\r\n        fork: function(newPath) {\r\n          path = newPath;\r\n          this.next = newPath[0];\r\n        },\r\n        repeatCurrent: function() {\r\n          path.unshift(this.current);\r\n          this.next = this.current;\r\n        },\r\n        insert: function(state) {\r\n          path.unshift(state);\r\n          this.next = this.state;\r\n        },\r\n        terminate: function() {\r\n          path = [];\r\n          this.next = '';\r\n        }\r\n      };\r\n    }\r\n    return new Promise(function(resolve, reject) {\r\n      (function step(i, callback) {\r\n        var nextStep = null;\r\n        if (isFunction(steps)) {\r\n          if (path && path.length > 0) {\r\n            stateObject.current = path[0];\r\n            stateObject.next = path.length > 1 ? path[1] : '';\r\n            stateObject.alertNumber = i;\r\n            path.shift();\r\n            nextStep = steps(stateObject);\r\n          } else {\r\n            nextStep = steps(i);\r\n          }\r\n        } else if (i < steps.length) {\r\n          nextStep = steps[i];\r\n        }\r\n        if (nextStep) {\r\n          sweetAlert(nextStep).then(function() {\r\n            step(i+1, callback);\r\n          }, function(dismiss) {\r\n            reject(dismiss);\r\n          });\r\n        } else {\r\n          resolve();\r\n        }\r\n      })(0);\r\n    });\r\n  };\r\n\r\n  /*\r\n   * Global function to close sweetAlert\r\n   */\r\n  sweetAlert.close = sweetAlert.closeModal = function(onComplete) {\r\n    var modal = getModal();\r\n    removeClass(modal, 'show-swal2');\r\n    addClass(modal, 'hide-swal2');\r\n\r\n    // Reset icon animations\r\n    var $successIcon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes.success);\r\n    removeClass($successIcon, 'animate');\r\n    removeClass($successIcon.querySelector('.tip'), 'animate-success-tip');\r\n    removeClass($successIcon.querySelector('.long'), 'animate-success-long');\r\n\r\n    var $errorIcon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes.error);\r\n    removeClass($errorIcon, 'animate-error-icon');\r\n    removeClass($errorIcon.querySelector('.x-mark'), 'animate-x-mark');\r\n\r\n    var $warningIcon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes.warning);\r\n    removeClass($warningIcon, 'pulse-warning');\r\n\r\n    resetPrevState();\r\n\r\n    // If animation is supported, animate then remove mediaquery (#242)\r\n    var mediaqueryId = modal.getAttribute('data-mediaquery-id');\r\n    if (animationEndEvent && !hasClass(modal, 'no-animation')) {\r\n      modal.addEventListener(animationEndEvent, function swalCloseEventFinished() {\r\n        modal.removeEventListener(animationEndEvent, swalCloseEventFinished);\r\n        if (hasClass(modal, 'hide-swal2')) {\r\n          _hide(modal);\r\n          fadeOut(getOverlay(), 0);\r\n        }\r\n        removeMediaQuery(mediaqueryId);\r\n      });\r\n    } else {\r\n      // Otherwise, remove mediaquery immediately\r\n      _hide(modal);\r\n      _hide(getOverlay());\r\n      removeMediaQuery(mediaqueryId);\r\n    }\r\n    if (onComplete !== null && typeof onComplete === 'function') {\r\n      onComplete.call(this, modal);\r\n    }\r\n  };\r\n\r\n  /*\r\n   * Global function to click 'Confirm' button\r\n   */\r\n  sweetAlert.clickConfirm = function() {\r\n    getConfirmButton().click();\r\n  };\r\n\r\n  /*\r\n   * Global function to click 'Cancel' button\r\n   */\r\n  sweetAlert.clickCancel = function() {\r\n    getCancelButton().click();\r\n  };\r\n\r\n  /*\r\n   * Add modal + overlay to DOM\r\n   */\r\n  sweetAlert.init = function() {\r\n    if (typeof document === 'undefined') {\r\n      console.log('SweetAlert2 requires document to initialize');\r\n      return;\r\n    } else if (document.getElementsByClassName(swalClasses.container).length) {\r\n      return;\r\n    }\r\n\r\n    var sweetWrap = document.createElement('div');\r\n    sweetWrap.className = swalClasses.container;\r\n\r\n    sweetWrap.innerHTML = sweetHTML;\r\n\r\n    document.body.appendChild(sweetWrap);\r\n\r\n    var modal = getModal();\r\n    var $input = getChildByClass(modal, swalClasses.input);\r\n    var $select = getChildByClass(modal, swalClasses.select);\r\n    var $checkbox = modal.querySelector('#' + swalClasses.checkbox);\r\n    var $textarea = getChildByClass(modal, swalClasses.textarea);\r\n    var $customImg = getChildByClass(modal, swalClasses.image);\r\n\r\n    $input.oninput = function() {\r\n      sweetAlert.resetValidationError();\r\n    };\r\n\r\n    $input.onkeyup = function(event) {\r\n      event.stopPropagation();\r\n      if (event.keyCode === 13) {\r\n        sweetAlert.clickConfirm();\r\n      }\r\n    };\r\n\r\n    $select.onchange = function() {\r\n      sweetAlert.resetValidationError();\r\n    };\r\n\r\n    $checkbox.onchange = function() {\r\n      sweetAlert.resetValidationError();\r\n    };\r\n\r\n    $textarea.oninput = function() {\r\n      sweetAlert.resetValidationError();\r\n    };\r\n\r\n    $customImg.onload = $customImg.onerror = fixVerticalPosition;\r\n\r\n    window.addEventListener('resize', fixVerticalPosition, false);\r\n  };\r\n\r\n  /**\r\n   * Set default params for each popup\r\n   * @param {Object} userParams\r\n   */\r\n  sweetAlert.setDefaults = function(userParams) {\r\n    if (!userParams) {\r\n      throw new Error('userParams is required');\r\n    }\r\n    if (typeof userParams !== 'object') {\r\n      throw new Error('userParams has to be a object');\r\n    }\r\n\r\n    extend(modalParams, userParams);\r\n  };\r\n\r\n  /**\r\n   * Reset default params for each popup\r\n   */\r\n  sweetAlert.resetDefaults = function() {\r\n    modalParams = extend({}, defaultParams);\r\n  };\r\n\r\n  sweetAlert.version = '4.2.4';\r\n\r\n  window.sweetAlert = window.swal = sweetAlert;\r\n\r\n  /*\r\n  * If library is injected after page has loaded\r\n  */\r\n  (function() {\r\n    if (document.readyState === 'complete' || document.readyState === 'interactive' && document.body) {\r\n      sweetAlert.init();\r\n    } else {\r\n      document.addEventListener('DOMContentLoaded', function onDomContentLoaded() {\r\n        document.removeEventListener('DOMContentLoaded', onDomContentLoaded, false);\r\n        sweetAlert.init();\r\n      }, false);\r\n    }\r\n  })();\r\n\r\n  if (typeof Promise === 'function') {\r\n    Promise.prototype.done = Promise.prototype.done || function() {\r\n      return this.catch(function() {\r\n        // Catch promise rejections silently.\r\n        // https://github.com/limonte/sweetalert2/issues/177\r\n      });\r\n    };\r\n  } else {\r\n    console.warn('SweetAlert2: Please inlude Promise polyfill BEFORE including sweetalert2.js if IE10+ support needed.');\r\n  }\r\n\r\n  return sweetAlert;\r\n\r\n}));"]}