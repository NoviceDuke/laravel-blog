{"version":3,"sources":["ajax-modal.js","a_delete_method.js"],"names":[],"mappingsxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"modal.js","sourcesContent":["$(document).ready(function(){\r\n\r\n\r\n    var url =\"category\";\r\n\r\n    //display modal form for category editing\r\n    $('.open-modal').click(function(){\r\n        var category_slug = $(this).val();\r\n\r\n        $.get(url + '/' + category_slug, function (data) {\r\n            //success data\r\n            console.log(data);\n            $('#category_slug').val(data.slug);\r\n            $('#category').val(data.name);\r\n            $('#btn-save').val(\"update\");\r\n            $('#myModal').modal('show');\r\n        })\r\n    });\r\n\r\n    //display modal form for creating new Category\r\n    $('#btn-add').click(function(){\r\n        $('#btn-save').val(\"add\");\r\n        $('#frmCategory').trigger(\"reset\");\r\n        $('#myModal').modal('show');\r\n    });\r\n\r\n    //delete category and remove it from list\r\n    $('.delete-Category').click(function(){\r\n        var category_slug = $(this).val();\r\n\r\n        $.ajax({\r\n\r\n            type: \"DELETE\",\r\n            url: url + '/' + category_slug,\r\n            success: function (data) {\r\n                console.log(data);\r\n\r\n                $(\"#category\" + category_slug).remove();\r\n            },\r\n            error: function (data) {\r\n                console.log('Error:', data);\r\n            }\r\n        });\r\n    });\r\n\r\n    //create new category / update existing category\r\n    $(\"#btn-save\").click(function (e) {\r\n        $.ajaxSetup({\r\n            headers: {\r\n                'X-CSRF-TOKEN': $('meta[name=\"_token\"]').attr('content')\r\n            }\r\n        })\r\n\r\n        e.preventDefault();\r\n\r\n        var formData = {\r\n            Category: $('#category').val(),\r\n\r\n        }\r\n\r\n        //used to determine the http verb to use [add=POST], [update=PUT]\r\n        var state = $('#btn-save').val();\r\n\r\n        var type = \"POST\"; //for creating new resource\r\n        var category_id = $('#category_id').val();;\r\n        var my_url = url;\r\n\r\n        if (state == \"update\"){\r\n            type = \"PUT\"; //for updating existing resource\r\n            my_url += '/' + category_id;\r\n        }\r\n\r\n        console.log(formData);\r\n\r\n        $.ajax({\r\n\r\n            type: type,\r\n            url: my_url,\r\n            data: formData,\r\n            dataType: 'json',\r\n            success: function (data) {\r\n                console.log(data);\r\n\r\n                var category = '<tr id=\"category' + data.id + '\"><td>' + data.id + '</td><td>' + data.category + '</td><td>' + data.description + '</td><td>' + data.created_at + '</td>';\r\n                category += '<td><button class=\"btn btn-warning btn-xs btn-detail open-modal\" value=\"' + data.id + '\">Edit</button>';\r\n                category += '<button class=\"btn btn-danger btn-xs btn-delete delete-category\" value=\"' + data.id + '\">Delete</button></td></tr>';\r\n\r\n                if (state == \"add\"){ //if user added a new record\r\n                    $('#category-list').append(category);\r\n                }else{ //if user updated an existing record\r\n\r\n                    $(\"#category\" + category_id).replaceWith( category );\r\n                }\r\n\r\n                $('#frmCategory').trigger(\"reset\");\r\n\r\n                $('#myModal').modal('hide')\r\n            },\r\n            error: function (data) {\r\n                console.log('Error:', data);\r\n            }\r\n        });\r\n    });\r\n});\r\n","// 註冊設定 a button能夠賦予DELETE method\r\n// <a href=\"posts/2\" data-method=\"delete\" data-confirm=\"Are you sure?\" data-token=\"{{csrf_token()}}\">\r\n  var laravel = {\r\n     initialize: function() {\r\n       this.methodLinks = $('a[data-method]');\r\n       this.token = $('a[data-token]');\r\n       this.registerEvents();\r\n     },\r\n\r\n     registerEvents: function() {\r\n       this.methodLinks.on('click', this.handleMethod);\r\n     },\r\n\r\n     handleMethod: function(e) {\r\n       var link = $(this);\r\n       var httpMethod = link.data('method').toUpperCase();\r\n       var form;\r\n\r\n       // If the data-method attribute is not PUT or DELETE,\r\n       // then we don't know what to do. Just ignore.\r\n       if ( $.inArray(httpMethod, ['PUT', 'DELETE']) === - 1 ) {\r\n         return;\r\n       }\r\n\r\n       // Allow user to optionally provide data-confirm=\"Are you sure?\"\r\n       if ( link.data('confirm') ) {\r\n         if ( ! laravel.verifyConfirm(link) ) {\r\n           return false;\r\n         }\r\n       }\r\n\r\n       form = laravel.createForm(link);\r\n       form.submit();\r\n\r\n       e.preventDefault();\r\n     },\r\n\r\n     verifyConfirm: function(link) {\r\n       return confirm(link.data('confirm'));\r\n     },\r\n\r\n     createForm: function(link) {\r\n       var form =\r\n       $('<form>', {\r\n         'method': 'POST',\r\n         'action': link.attr('href')\r\n       });\r\n\r\n       var token =\r\n       $('<input>', {\r\n         'type': 'hidden',\r\n         'name': '_token',\r\n         'value': link.data('token')\r\n         });\r\n\r\n       var hiddenInput =\r\n       $('<input>', {\r\n         'name': '_method',\r\n         'type': 'hidden',\r\n         'value': link.data('method')\r\n       });\r\n\r\n       return form.append(token, hiddenInput)\r\n                  .appendTo('body');\r\n     }\r\n   };\r\n\r\n   laravel.initialize();\r\n"],"sourceRoot":"/source/"}